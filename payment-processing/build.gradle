plugins {
	id 'jacoco'
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.openapi.generator" version "7.14.0"
}

group = 'ru.yofujitsu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jacoco {
	toolVersion = "0.8.10"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/payment-processing-openapi.yaml"
	outputDir = layout.buildDirectory.dir("generated").get().asFile.toString()
	apiPackage = "ru.yofujitsu.payment_processing.api"
	modelPackage = "ru.yofujitsu.payment_processing.model"
	invokerPackage = "ru.yofujitsu.payment_processing.invoker"
	generateApiTests = false
	generateModelTests = false
	configOptions.set([
			interfaceOnly: "true",
			useJakartaEe: "true",
			useLombok: "true"
	])
}

sourceSets {
	main {
		java {
			srcDirs += layout.buildDirectory.dir("generated/src/main/java")
		}
	}
}


tasks.named('jacocoTestReport') {
	dependsOn tasks.named('test')

	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}

	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				'ru/yofujitsu/payment_processing/api/model/**',
				'ru/yofujitsu/payment_processing/PaymentGatewayApplication.class'
		])
	}))
}


tasks.named('test') {
	useJUnitPlatform()
}
